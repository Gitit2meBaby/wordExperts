@import "./globals.scss";

.mobContents {
  @media screen and (min-width: 1200px) {
    display: none;
  }
  position: fixed;
  top: 25vh;
  top: 25dvh;
  right: -3.7rem;
  z-index: 10;
  transition: right 0.5s ease; // Add transition for the container itself

  // Button styles
  button {
    background-color: $body;
    opacity: 0.7;
    color: $offWhite;
    transform: rotate(270deg);
    font-size: 1.25rem;
    font-weight: 700;
    letter-spacing: 2px;
    padding: 1rem 2rem 0.5rem 2rem;
    border-radius: 0.2rem;
    transition: opacity 0.5s ease;

    &:hover {
      opacity: 0.9;
    }
  }

  svg {
    position: absolute;
    top: 1rem;
    right: 1rem;
    z-index: 105;
    cursor: pointer;
    transition: transform 0.3s ease;

    &:hover {
      transform: scale(1.1);
    }
  }
}

.contents {
  position: relative;
  grid-row: span 2;
  background-color: $grayBGC;
  padding: 2rem;
  border-radius: 0.1rem;
  height: fit-content;
  box-shadow: 0 0 1000px 1000px rgba(0, 0, 0, 0.7);
  opacity: 0;
  transform: translateX(200%); // Fixed: translateX not transformX
  transition: opacity 1s ease, transform 1s ease; // Specify both properties

  &.visible {
    opacity: 1;
    transform: translateX(0);
    transition: opacity 1s ease, transform 1s ease;
  }

  h3 {
    color: $black;
    margin: 1rem;
    font-weight: 700;
    font-size: 1.25rem;
  }

  .buttonWrapper {
    margin: 3rem 0 1rem 0;
    display: flex;
    justify-content: center;
    button {
      padding: 1.5rem 3rem;
    }
  }
}

.contentLink {
  position: relative;
  padding: 1rem;
  transition: all 0.5s ease;

  @include tablet {
    padding: 0.5rem;
  }

  a,
  p {
    color: $darkGrayText;
    transition: all 0.5s ease;
    line-height: 2rem;
    cursor: pointer;
    &::after {
      content: "â†’";
      position: absolute;
      right: 1rem;
      bottom: 1.25rem;
      opacity: 0;
      color: $theme;
      transition: opacity 0.5s ease;
      font-size: 1.5rem;
      font-weight: 700;
      @media screen and (max-width: 1200px) {
        display: none;
      }
    }
  }
}

a:hover {
  .contentLink {
    background-color: white;
    cursor: pointer;

    p {
      color: $theme;
      font-weight: 700;

      &::after {
        opacity: 1;
      }
    }
  }
}

.contentLink[style*="display: flex"] {
  a:hover p {
    color: $theme;
    font-weight: 700;
  }
}
